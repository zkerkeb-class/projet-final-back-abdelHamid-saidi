openapi: 3.0.0
info:
  title: API BizTown
  version: 1.0.0
  description: |
    # API BizTown - Documentation
    
    API pour le jeu BizTown - Gestion des joueurs, ressources, b√¢timents et de la ville.
    
    ## üîê Authentification
    
    La plupart des routes n√©cessitent une authentification JWT. Voici comment proc√©der :
    
    ### 1. Cr√©er un compte
    Utilisez la route `/api/joueurs/inscription` pour cr√©er un nouveau compte.
    
    ### 2. Se connecter
    Utilisez la route `/api/joueurs/connexion` avec vos identifiants pour obtenir un token JWT.
    
    ### 3. Utiliser l'authentification
    - Cliquez sur le bouton **"Authorize"** (üîí) en haut √† droite
    - Entrez votre token JWT avec le format : `Bearer VOTRE_TOKEN_ICI`
    - Cliquez sur **"Authorize"** puis **"Close"**
    
    ### 4. Routes prot√©g√©es
    Une fois authentifi√©, vous pouvez utiliser toutes les routes prot√©g√©es qui affichent un cadenas üîí.
    
    ## üìã Routes disponibles
    
    - **Authentification** : Inscription, connexion, profil
    - **Joueurs** : Gestion des comptes utilisateurs
    - **Ressources** : Types de ressources du jeu
    - **Niveaux de B√¢timents** : Configuration des b√¢timents
    - **Ressources des Joueurs** : Inventaire des joueurs
    - **Cases du Terrain** : Gestion du terrain de jeu
    - **Possessions de B√¢timents** : B√¢timents construits par les joueurs
    - **Productions de Ressources** : Configuration de la production
    - **Besoins en Ressources** : Ressources n√©cessaires pour les am√©liorations
    
    ## üöÄ D√©marrage rapide
    
    1. Cr√©ez un compte avec `/api/joueurs/inscription`
    2. Connectez-vous avec `/api/joueurs/connexion`
    3. Copiez le token JWT de la r√©ponse
    4. Cliquez sur "Authorize" et entrez `Bearer VOTRE_TOKEN`
    5. Testez les routes prot√©g√©es !
  contact:
    name: √âquipe BizTown
    email: contact@biztown.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:3000
    description: Serveur de d√©veloppement
  - url: https://api.biztown.com
    description: Serveur de production
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token pour l'authentification
  schemas:
    # Sch√©ma Joueur
    Joueur:
      type: object
      properties:
        _id:
          type: string
          description: ID unique du joueur
        nom:
          type: string
          description: Nom du joueur
        email:
          type: string
          format: email
          description: Email du joueur
        motDePasse:
          type: string
          description: Mot de passe (non retourn√© dans les r√©ponses)
        niveau:
          type: number
          description: Niveau actuel du joueur
        experience:
          type: number
          description: Exp√©rience actuelle du joueur
        ressources:
          type: object
          description: Ressources du joueur
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation du compte
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - nom
        - email
        - motDePasse

    # Sch√©ma Ressource
    Ressource:
      type: object
      properties:
        _id:
          type: string
          description: ID unique de la ressource
        type:
          type: string
          enum: [√ânergie, Mat√©riaux, Produits, Influence]
          description: Type de ressource
        nom:
          type: string
          description: Nom de la ressource
        image:
          type: string
          description: URL de l'image de la ressource
        prixAchat:
          type: number
          description: Prix d'achat de la ressource
        prixVente:
          type: number
          description: Prix de vente de la ressource
        description:
          type: string
          description: Description de la ressource
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - type
        - nom
        - image
        - prixAchat
        - prixVente

    # Sch√©ma NiveauBatiment
    NiveauBatiment:
      type: object
      properties:
        _id:
          type: string
          description: ID unique du niveau de b√¢timent
        nom:
          type: string
          enum: [Bureau, Usine, D√©p√¥t, Centrale, March√©, Atelier, Banque]
          description: Nom du type de b√¢timent
        image:
          type: string
          description: URL de l'image du b√¢timent
        niveau:
          type: number
          description: Niveau du b√¢timent
        description:
          type: string
          description: Description du niveau de b√¢timent
        coutBase:
          type: number
          description: Co√ªt de base du b√¢timent
        coutAmelioration:
          type: number
          description: Co√ªt d'am√©lioration du b√¢timent
        ressourcesAmelioration:
          type: array
          items:
            type: object
            properties:
              ressourceId:
                type: string
                description: ID de la ressource n√©cessaire
              quantite:
                type: number
                description: Quantit√© de ressource n√©cessaire
          description: Ressources n√©cessaires pour l'am√©lioration
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - nom
        - image
        - niveau

    # Sch√©ma RessourceJoueur
    RessourceJoueur:
      type: object
      properties:
        _id:
          type: string
          description: ID unique de la ressource du joueur
        joueurId:
          type: string
          description: ID du joueur
        ressourceId:
          type: string
          description: ID de la ressource
        quantite:
          type: number
          description: Quantit√© de ressource poss√©d√©e
        derniereMiseAJour:
          type: string
          format: date-time
          description: Date de derni√®re mise √† jour
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - joueurId
        - ressourceId

    # Sch√©ma CasesTerrain
    CasesTerrain:
      type: object
      properties:
        _id:
          type: string
          description: ID unique de la case du terrain
        pos_x:
          type: number
          description: Position X sur le terrain
        pos_y:
          type: number
          description: Position Y sur le terrain
        joueurId:
          type: string
          description: ID du joueur propri√©taire
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - pos_x
        - pos_y
        - joueurId

    # Sch√©ma PossessionBatiment
    PossessionBatiment:
      type: object
      properties:
        _id:
          type: string
          description: ID unique de la possession de b√¢timent
        pos_x:
          type: number
          description: Position X du b√¢timent
        pos_y:
          type: number
          description: Position Y du b√¢timent
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        joueurId:
          type: string
          description: ID du joueur propri√©taire
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - pos_x
        - pos_y
        - niveauId
        - joueurId

    # Sch√©ma ProductionRessource
    ProductionRessource:
      type: object
      properties:
        _id:
          type: string
          description: ID unique de la production de ressource
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        ressourceId:
          type: string
          description: ID de la ressource produite
        quantite:
          type: number
          description: Quantit√© produite
        frequence:
          type: number
          description: Fr√©quence de production (en heures)
        actif:
          type: boolean
          description: Si la production est active
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - niveauId
        - ressourceId
        - quantite

    # Sch√©ma BesoinRessource
    BesoinRessource:
      type: object
      properties:
        _id:
          type: string
          description: ID unique du besoin en ressource
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        ressourceId:
          type: string
          description: ID de la ressource n√©cessaire
        quantite:
          type: number
          description: Quantit√© n√©cessaire
        productionRessourceId:
          type: string
          description: ID de la production de ressource associ√©e
        createdAt:
          type: string
          format: date-time
          description: Date de cr√©ation
        updatedAt:
          type: string
          format: date-time
          description: Date de derni√®re modification
      required:
        - niveauId
        - ressourceId
        - quantite

    # Sch√©mas de requ√™te
    InscriptionRequest:
      type: object
      required: [nom, email, motDePasse]
      properties:
        nom:
          type: string
          description: Nom du joueur
          minLength: 2
          maxLength: 50
        email:
          type: string
          format: email
          description: Email du joueur
        motDePasse:
          type: string
          description: Mot de passe
          minLength: 6

    ConnexionRequest:
      type: object
      required: [email, motDePasse]
      properties:
        email:
          type: string
          format: email
          description: Email du joueur
        motDePasse:
          type: string
          description: Mot de passe

    ConnexionResponse:
      type: object
      properties:
        message:
          type: string
          description: Message de succ√®s
        token:
          type: string
          description: JWT token pour l'authentification
        joueur:
          $ref: '#/components/schemas/Joueur'

    RessourceRequest:
      type: object
      required: [type, nom, image, prixAchat, prixVente]
      properties:
        type:
          type: string
          enum: [√ânergie, Mat√©riaux, Produits, Influence]
          description: Type de ressource
        nom:
          type: string
          description: Nom de la ressource
        image:
          type: string
          description: URL de l'image
        prixAchat:
          type: number
          description: Prix d'achat
        prixVente:
          type: number
          description: Prix de vente
        description:
          type: string
          description: Description de la ressource

    NiveauBatimentRequest:
      type: object
      required: [nom, image, niveau]
      properties:
        nom:
          type: string
          enum: [Bureau, Usine, D√©p√¥t, Centrale, March√©, Atelier, Banque]
          description: Nom du type de b√¢timent
        image:
          type: string
          description: URL de l'image
        niveau:
          type: number
          description: Niveau du b√¢timent
        description:
          type: string
          description: Description du niveau
        coutBase:
          type: number
          description: Co√ªt de base
        coutAmelioration:
          type: number
          description: Co√ªt d'am√©lioration
        ressourcesAmelioration:
          type: array
          items:
            type: object
            properties:
              ressourceId:
                type: string
                description: ID de la ressource
              quantite:
                type: number
                description: Quantit√© n√©cessaire

    RessourceJoueurRequest:
      type: object
      required: [joueurId, ressourceId]
      properties:
        joueurId:
          type: string
          description: ID du joueur
        ressourceId:
          type: string
          description: ID de la ressource
        quantite:
          type: number
          description: Quantit√© de ressource

    CasesTerrainRequest:
      type: object
      required: [pos_x, pos_y, joueurId]
      properties:
        pos_x:
          type: number
          description: Position X
        pos_y:
          type: number
          description: Position Y
        joueurId:
          type: string
          description: ID du joueur propri√©taire

    PossessionBatimentRequest:
      type: object
      required: [pos_x, pos_y, niveauId, joueurId]
      properties:
        pos_x:
          type: number
          description: Position X du b√¢timent
        pos_y:
          type: number
          description: Position Y du b√¢timent
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        joueurId:
          type: string
          description: ID du joueur propri√©taire

    ProductionRessourceRequest:
      type: object
      required: [niveauId, ressourceId, quantite]
      properties:
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        ressourceId:
          type: string
          description: ID de la ressource produite
        quantite:
          type: number
          description: Quantit√© produite
        frequence:
          type: number
          description: Fr√©quence de production (en heures)
        actif:
          type: boolean
          description: Si la production est active

    BesoinRessourceRequest:
      type: object
      required: [niveauId, ressourceId, quantite]
      properties:
        niveauId:
          type: string
          description: ID du niveau de b√¢timent
        ressourceId:
          type: string
          description: ID de la ressource n√©cessaire
        quantite:
          type: number
          description: Quantit√© n√©cessaire
        productionRessourceId:
          type: string
          description: ID de la production de ressource associ√©e

    Error:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur
        error:
          type: string
          description: D√©tails de l'erreur (en d√©veloppement uniquement) 

paths:
  # Routes d'accueil
  /:
    get:
      summary: Page d'accueil de l'API
      description: Retourne un message de bienvenue
      tags: [Accueil]
      responses:
        200:
          description: Message de bienvenue
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bienvenue sur l'API BizTown"

  # Routes d'authentification et joueurs
  /api/joueurs/inscription:
    post:
      summary: Inscription d'un nouveau joueur
      description: Cr√©e un nouveau compte joueur
      tags: [Authentification]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InscriptionRequest'
            example:
              nom: "John Doe"
              email: "john.doe@example.com"
              motDePasse: "motdepasse123"
      responses:
        201:
          description: Joueur cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Joueur cr√©√© avec succ√®s"
                  joueur:
                    $ref: '#/components/schemas/Joueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Email d√©j√† utilis√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs/connexion:
    post:
      summary: Connexion d'un joueur
      description: Authentifie un joueur et retourne un token JWT
      tags: [Authentification]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnexionRequest'
            example:
              email: "john.doe@example.com"
              motDePasse: "motdepasse123"
      responses:
        200:
          description: Connexion r√©ussie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnexionResponse'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Email ou mot de passe incorrect
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs:
    get:
      summary: R√©cup√©rer tous les joueurs
      description: Retourne la liste de tous les joueurs (authentification requise)
      tags: [Joueurs]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des joueurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Joueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er un nouveau joueur
      description: Cr√©e un nouveau joueur (authentification requise)
      tags: [Joueurs]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InscriptionRequest'
      responses:
        201:
          description: Joueur cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Joueur cr√©√© avec succ√®s"
                  joueur:
                    $ref: '#/components/schemas/Joueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs/{id}:
    get:
      summary: R√©cup√©rer un joueur par ID
      description: Retourne les d√©tails d'un joueur sp√©cifique
      tags: [Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du joueur
      responses:
        200:
          description: D√©tails du joueur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour un joueur
      description: Met √† jour les informations d'un joueur
      tags: [Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du joueur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                email:
                  type: string
                  format: email
                motDePasse:
                  type: string
                niveau:
                  type: number
                experience:
                  type: number
      responses:
        200:
          description: Joueur mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Joueur mis √† jour avec succ√®s"
                  joueur:
                    $ref: '#/components/schemas/Joueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer un joueur
      description: Supprime un joueur de la base de donn√©es
      tags: [Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du joueur
      responses:
        200:
          description: Joueur supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Joueur supprim√© avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs/profil:
    get:
      summary: R√©cup√©rer le profil du joueur connect√©
      description: Retourne les informations du profil du joueur authentifi√©
      tags: [Profil]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Profil du joueur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Joueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour le profil du joueur connect√©
      description: Met √† jour les informations du profil du joueur authentifi√©
      tags: [Profil]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                email:
                  type: string
                  format: email
                motDePasse:
                  type: string
      responses:
        200:
          description: Profil mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Profil mis √† jour avec succ√®s"
                  joueur:
                    $ref: '#/components/schemas/Joueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs/test:
    get:
      summary: Route de test pour v√©rifier les joueurs
      description: Route de test pour r√©cup√©rer tous les joueurs (√† retirer en production)
      tags: [Joueurs]
      responses:
        200:
          description: Liste de tous les joueurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Joueur'
        500:
          description: Erreur lors de la r√©cup√©ration des joueurs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/joueurs/classement:
    get:
      summary: R√©cup√©rer le classement des joueurs
      description: Retourne le classement des joueurs bas√© sur leur niveau et exp√©rience
      tags: [Joueurs]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Classement des joueurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Joueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des ressources
  /api/ressources:
    get:
      summary: R√©cup√©rer toutes les ressources
      description: Retourne la liste de toutes les ressources
      tags: [Ressources]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des ressources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ressource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er une nouvelle ressource
      description: Cr√©e une nouvelle ressource (authentification requise)
      tags: [Ressources]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RessourceRequest'
            example:
              type: "√ânergie"
              nom: "√âlectricit√©"
              image: "/images/electricite.png"
              prixAchat: 10
              prixVente: 15
              description: "√ânergie √©lectrique de base"
      responses:
        201:
          description: Ressource cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource cr√©√©e avec succ√®s"
                  ressource:
                    $ref: '#/components/schemas/Ressource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/ressources/{id}:
    get:
      summary: R√©cup√©rer une ressource par ID
      description: Retourne les d√©tails d'une ressource sp√©cifique
      tags: [Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource
      responses:
        200:
          description: D√©tails de la ressource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ressource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour une ressource
      description: Met √† jour les informations d'une ressource
      tags: [Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RessourceRequest'
      responses:
        200:
          description: Ressource mise √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource mise √† jour avec succ√®s"
                  ressource:
                    $ref: '#/components/schemas/Ressource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer une ressource
      description: Supprime une ressource de la base de donn√©es
      tags: [Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource
      responses:
        200:
          description: Ressource supprim√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource supprim√©e avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des niveaux de b√¢timents
  /api/niveaux-batiments:
    get:
      summary: R√©cup√©rer tous les niveaux de b√¢timents
      description: Retourne la liste de tous les niveaux de b√¢timents
      tags: [Niveaux de B√¢timents]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des niveaux de b√¢timents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NiveauBatiment'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er un nouveau niveau de b√¢timent
      description: Cr√©e un nouveau niveau de b√¢timent (authentification requise)
      tags: [Niveaux de B√¢timents]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NiveauBatimentRequest'
            example:
              nom: "Bureau"
              image: "/images/bureau.png"
              niveau: 1
              description: "Bureau de niveau 1"
              coutBase: 1000
              coutAmelioration: 500
              ressourcesAmelioration:
                - ressourceId: "507f1f77bcf86cd799439011"
                  quantite: 10
      responses:
        201:
          description: Niveau de b√¢timent cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Niveau de b√¢timent cr√©√© avec succ√®s"
                  niveauBatiment:
                    $ref: '#/components/schemas/NiveauBatiment'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/niveaux-batiments/{id}:
    get:
      summary: R√©cup√©rer un niveau de b√¢timent par ID
      description: Retourne les d√©tails d'un niveau de b√¢timent sp√©cifique
      tags: [Niveaux de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du niveau de b√¢timent
      responses:
        200:
          description: D√©tails du niveau de b√¢timent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NiveauBatiment'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Niveau de b√¢timent non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour un niveau de b√¢timent
      description: Met √† jour les informations d'un niveau de b√¢timent
      tags: [Niveaux de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du niveau de b√¢timent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NiveauBatimentRequest'
      responses:
        200:
          description: Niveau de b√¢timent mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Niveau de b√¢timent mis √† jour avec succ√®s"
                  niveauBatiment:
                    $ref: '#/components/schemas/NiveauBatiment'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Niveau de b√¢timent non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer un niveau de b√¢timent
      description: Supprime un niveau de b√¢timent de la base de donn√©es
      tags: [Niveaux de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du niveau de b√¢timent
      responses:
        200:
          description: Niveau de b√¢timent supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Niveau de b√¢timent supprim√© avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Niveau de b√¢timent non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des ressources des joueurs
  /api/ressources-joueurs:
    get:
      summary: R√©cup√©rer toutes les ressources des joueurs
      description: Retourne la liste de toutes les ressources des joueurs
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des ressources des joueurs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RessourceJoueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er une nouvelle ressource de joueur
      description: Cr√©e une nouvelle ressource de joueur (authentification requise)
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RessourceJoueurRequest'
            example:
              joueurId: "507f1f77bcf86cd799439011"
              ressourceId: "507f1f77bcf86cd799439012"
              quantite: 100
      responses:
        201:
          description: Ressource de joueur cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource de joueur cr√©√©e avec succ√®s"
                  ressourceJoueur:
                    $ref: '#/components/schemas/RessourceJoueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/ressources-joueurs/{id}:
    get:
      summary: R√©cup√©rer une ressource de joueur par ID
      description: Retourne les d√©tails d'une ressource de joueur sp√©cifique
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource de joueur
      responses:
        200:
          description: D√©tails de la ressource de joueur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RessourceJoueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource de joueur non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour une ressource de joueur
      description: Met √† jour les informations d'une ressource de joueur
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource de joueur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RessourceJoueurRequest'
      responses:
        200:
          description: Ressource de joueur mise √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource de joueur mise √† jour avec succ√®s"
                  ressourceJoueur:
                    $ref: '#/components/schemas/RessourceJoueur'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource de joueur non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer une ressource de joueur
      description: Supprime une ressource de joueur de la base de donn√©es
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la ressource de joueur
      responses:
        200:
          description: Ressource de joueur supprim√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Ressource de joueur supprim√©e avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Ressource de joueur non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/ressources-joueurs/joueur/{joueurId}:
    get:
      summary: R√©cup√©rer toutes les ressources d'un joueur
      description: Retourne toutes les ressources d'un joueur sp√©cifique
      tags: [Ressources des Joueurs]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: joueurId
          required: true
          schema:
            type: string
          description: ID du joueur
      responses:
        200:
          description: Ressources du joueur
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RessourceJoueur'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des cases du terrain
  /api/cases-terrain:
    get:
      summary: R√©cup√©rer toutes les cases du terrain
      description: Retourne la liste de toutes les cases du terrain
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des cases du terrain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CasesTerrain'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er une nouvelle case du terrain
      description: Cr√©e une nouvelle case du terrain (authentification requise)
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasesTerrainRequest'
            example:
              pos_x: 10
              pos_y: 15
              joueurId: "507f1f77bcf86cd799439011"
      responses:
        201:
          description: Case du terrain cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Case du terrain cr√©√©e avec succ√®s"
                  caseTerrain:
                    $ref: '#/components/schemas/CasesTerrain'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/cases-terrain/{id}:
    get:
      summary: R√©cup√©rer une case du terrain par ID
      description: Retourne les d√©tails d'une case du terrain sp√©cifique
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la case du terrain
      responses:
        200:
          description: D√©tails de la case du terrain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CasesTerrain'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Case du terrain non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour une case du terrain
      description: Met √† jour les informations d'une case du terrain
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la case du terrain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CasesTerrainRequest'
      responses:
        200:
          description: Case du terrain mise √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Case du terrain mise √† jour avec succ√®s"
                  caseTerrain:
                    $ref: '#/components/schemas/CasesTerrain'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Case du terrain non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer une case du terrain
      description: Supprime une case du terrain de la base de donn√©es
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la case du terrain
      responses:
        200:
          description: Case du terrain supprim√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Case du terrain supprim√©e avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Case du terrain non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/cases-terrain/joueur/{joueurId}:
    get:
      summary: R√©cup√©rer toutes les cases d'un joueur
      description: Retourne toutes les cases du terrain d'un joueur sp√©cifique
      tags: [Cases du Terrain]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: joueurId
          required: true
          schema:
            type: string
          description: ID du joueur
      responses:
        200:
          description: Cases du terrain du joueur
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CasesTerrain'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des possessions de b√¢timents
  /api/possession-batiments:
    get:
      summary: R√©cup√©rer toutes les possessions de b√¢timents
      description: Retourne la liste de toutes les possessions de b√¢timents
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des possessions de b√¢timents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PossessionBatiment'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er une nouvelle possession de b√¢timent
      description: Cr√©e une nouvelle possession de b√¢timent (authentification requise)
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PossessionBatimentRequest'
            example:
              pos_x: 10
              pos_y: 15
              niveauId: "507f1f77bcf86cd799439011"
              joueurId: "507f1f77bcf86cd799439012"
      responses:
        201:
          description: Possession de b√¢timent cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Possession de b√¢timent cr√©√©e avec succ√®s"
                  possessionBatiment:
                    $ref: '#/components/schemas/PossessionBatiment'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/possession-batiments/{id}:
    get:
      summary: R√©cup√©rer une possession de b√¢timent par ID
      description: Retourne les d√©tails d'une possession de b√¢timent sp√©cifique
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la possession de b√¢timent
      responses:
        200:
          description: D√©tails de la possession de b√¢timent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossessionBatiment'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Possession de b√¢timent non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour une possession de b√¢timent
      description: Met √† jour les informations d'une possession de b√¢timent
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la possession de b√¢timent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PossessionBatimentRequest'
      responses:
        200:
          description: Possession de b√¢timent mise √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Possession de b√¢timent mise √† jour avec succ√®s"
                  possessionBatiment:
                    $ref: '#/components/schemas/PossessionBatiment'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Possession de b√¢timent non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer une possession de b√¢timent
      description: Supprime une possession de b√¢timent (authentification requise)
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la possession de b√¢timent
      responses:
        200:
          description: Possession de b√¢timent supprim√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Possession de b√¢timent supprim√©e avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Possession de b√¢timent non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/possession-batiments/joueur/{joueurId}:
    get:
      summary: R√©cup√©rer les possessions de b√¢timents d'un joueur
      description: Retourne toutes les possessions de b√¢timents d'un joueur sp√©cifique
      tags: [Possessions de B√¢timents]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: joueurId
          required: true
          schema:
            type: string
          description: ID du joueur
      responses:
        200:
          description: Liste des possessions de b√¢timents du joueur
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PossessionBatiment'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Joueur non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des productions de ressources
  /api/production-ressources:
    get:
      summary: R√©cup√©rer toutes les productions de ressources
      description: Retourne la liste de toutes les productions de ressources
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des productions de ressources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductionRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er une nouvelle production de ressource
      description: Cr√©e une nouvelle production de ressource (authentification requise)
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionRessourceRequest'
            example:
              niveauId: "507f1f77bcf86cd799439011"
              ressourceId: "507f1f77bcf86cd799439012"
              quantite: 10
              frequence: 3600
              actif: true
      responses:
        201:
          description: Production de ressource cr√©√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Production de ressource cr√©√©e avec succ√®s"
                  productionRessource:
                    $ref: '#/components/schemas/ProductionRessource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/production-ressources/{id}:
    get:
      summary: R√©cup√©rer une production de ressource par ID
      description: Retourne les d√©tails d'une production de ressource sp√©cifique
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la production de ressource
      responses:
        200:
          description: D√©tails de la production de ressource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Production de ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour une production de ressource
      description: Met √† jour les informations d'une production de ressource
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la production de ressource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionRessourceRequest'
      responses:
        200:
          description: Production de ressource mise √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Production de ressource mise √† jour avec succ√®s"
                  productionRessource:
                    $ref: '#/components/schemas/ProductionRessource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Production de ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer une production de ressource
      description: Supprime une production de ressource (authentification requise)
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID de la production de ressource
      responses:
        200:
          description: Production de ressource supprim√©e avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Production de ressource supprim√©e avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Production de ressource non trouv√©e
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/production-ressources/niveau/{niveauId}:
    get:
      summary: R√©cup√©rer les productions de ressources par niveau
      description: Retourne toutes les productions de ressources d'un niveau de b√¢timent sp√©cifique
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: niveauId
          required: true
          schema:
            type: string
          description: ID du niveau de b√¢timent
      responses:
        200:
          description: Liste des productions de ressources du niveau
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductionRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Niveau de b√¢timent non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/production-ressources/actives:
    get:
      summary: R√©cup√©rer les productions de ressources actives
      description: Retourne toutes les productions de ressources actives
      tags: [Productions de Ressources]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des productions de ressources actives
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductionRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Routes des besoins en ressources
  /api/besoins-ressources:
    get:
      summary: R√©cup√©rer tous les besoins en ressources
      description: Retourne la liste de tous les besoins en ressources
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Liste des besoins en ressources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BesoinRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Cr√©er un nouveau besoin en ressource
      description: Cr√©e un nouveau besoin en ressource (authentification requise)
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BesoinRessourceRequest'
            example:
              niveauId: "507f1f77bcf86cd799439011"
              ressourceId: "507f1f77bcf86cd799439012"
              quantite: 5
              productionRessourceId: "507f1f77bcf86cd799439013"
      responses:
        201:
          description: Besoin en ressource cr√©√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Besoin en ressource cr√©√© avec succ√®s"
                  besoinRessource:
                    $ref: '#/components/schemas/BesoinRessource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/besoins-ressources/{id}:
    get:
      summary: R√©cup√©rer un besoin en ressource par ID
      description: Retourne les d√©tails d'un besoin en ressource sp√©cifique
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du besoin en ressource
      responses:
        200:
          description: D√©tails du besoin en ressource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BesoinRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Besoin en ressource non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Mettre √† jour un besoin en ressource
      description: Met √† jour les informations d'un besoin en ressource
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du besoin en ressource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BesoinRessourceRequest'
      responses:
        200:
          description: Besoin en ressource mis √† jour avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Besoin en ressource mis √† jour avec succ√®s"
                  besoinRessource:
                    $ref: '#/components/schemas/BesoinRessource'
        400:
          description: Donn√©es invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Besoin en ressource non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Supprimer un besoin en ressource
      description: Supprime un besoin en ressource de la base de donn√©es
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID du besoin en ressource
      responses:
        200:
          description: Besoin en ressource supprim√© avec succ√®s
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Besoin en ressource supprim√© avec succ√®s"
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Besoin en ressource non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/besoins-ressources/niveau/{niveauId}:
    get:
      summary: R√©cup√©rer tous les besoins d'un niveau
      description: Retourne tous les besoins en ressources d'un niveau de b√¢timent sp√©cifique
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: niveauId
          required: true
          schema:
            type: string
          description: ID du niveau de b√¢timent
      responses:
        200:
          description: Besoins en ressources du niveau
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BesoinRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Niveau de b√¢timent non trouv√©
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/besoins-ressources/production/{productionRessourceId}:
    get:
      summary: R√©cup√©rer tous les besoins d'une production
      description: Retourne tous les besoins en ressources d'une production de ressource sp√©cifique
      tags: [Besoins en Ressources]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: productionRessourceId
          required: true
          schema:
            type: string
          description: ID de la production de ressource
      responses:
        200:
          description: Besoins en ressources de la production
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BesoinRessource'
        401:
          description: Token d'authentification invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 